- title: No Why Games - Devlog
  slug: NoWhyLogs
  description: |
    As some of you probably know, I already own a [private blog](https://karamablog.xyz) where I can share some of my thoughts, analysis, and nonsense; however, I still didn't work on a bonfire where I could sit, take the time to digest video game development's essence, and represent the trip itself in the shape of a "diary" or **"dev blog"**. That's why [NoWhyLogs](https://nowhylogs.vercel.app), a **devlog containing relevant information on my progress as an indie developer**, exists.

    Some of the site's main features include:
    
    1. **Enhanced accessibility**, which means that user can navigate the website using their **keyboard** and **VoiceOver**.
    2. **Dynamic OG image generation**, possible thanks to [Satori's library](https://github.com/vercel/satori) plus some personal tweaks.
    3. **Fuzzy search**, including a global search empowered by [Fuse.js](https://github.com/krisk/Fuse).
    4. **Light & dark themes**.
    5. **SEO-friendly architecture**.
    6. **Sitemap & RSS feed**.
    
    Keep it simple, clean, and efficient.
  techstack:
    - Astro
    - React
    - TypeScript
    - TailwindCSS
    - Figma
    - ESLint
    - Phosphor Icons
    - Prettier
  
  links:
    - title: '@NoWhyLogs'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/NoWhyLogs'

    - title: No Why Games | Devlog
      icon: Compass
      url: 'https://nowhylogs.vercel.app'

- title: Maria Brió, professional portfolio
  slug: MariaBrioPortfolio
  description: |
    Certificates. Trainings. Degrees. We have a huge vested interest in them, partly because they are supposed to take us into this future we can't even grasp. I do not deny the inherent truth of it, though; a solid education is a pretty easy thing to carry around, yet our approach to it requires a deep reform. Similarly, the lack of educational and professional opportunities should be discussed and addressed, but that's a story for another night. Today, we'll focus on the importance of portfolios, which may significantly define our success while trying to find an opportunity.

    On this occasion, similarly to many other examples that have become extremely popular these days, I decided to organize the [portfolio and CV of Maria Brió Pérez](https://mariabrio.vercel.app) following the structure of a **landing page**. This approach resulted in the following structure:

    1. **About**, a brief introduction displaying a profile picture, some crucial information, and some professional platforms and documents: [LinkedIn](https://www.linkedin.com/in/mariabrioperez/), [Orcid](https://orcid.org/0000-0002-6328-9556), [her PhD thesis](https://research.utwente.nl/en/publications/a-journey-towards-responsive-and-circular-polymer-brushes-design-), or [her curriculum](https://github.com/JuditKaramazov/MariaBrioPortfolio/blob/main/assets/MariaBrioPerez-CV.pdf).
    2. **Skills**, organized under the shape of an accordion in order to make information as accessible as readable.
    3. **Experience**, where you'll find her education and work experience, with the proper information displayed as a visual timeline.
    4. **Articles**, with a collection of her most recent papers, integrated as visually and interactively as possible.
    5. **Contact**, displaying her phone number, address, and a contact form.

    As for some of the site's main features:
    
    1. **Dark/light mode**, with a theme switcher enhancing the visual appeal for readers.
    2. **EmailJS**, a tool that helps to send emails using client-side technologies only.
    3. **Single page**, enabling users to get a clear idea of her profile thanks to a clean, minimalist, and compact design.
    4. **Swiper**, allowing to display Maria's most recent works instead of simply listing them.
    
    Built upon HTML, Sass, and JavaScript, I wanted to reproduce the cleanest, simplest, and most minimal platform for recruiters to find the outstanding professional (and human being) that Maria Brió is. Keep it simple. Keep it effective.
  techstack:
    - CSS
    - EmailJS
    - HTML
    - JavaScript
    - Sass
    - Swiper
  
  links:
    - title: '@MariaBrioPortfolio'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/MariaBrioPortfolio'

    - title: Maria Brió Pérez | Professional portfolio
      icon: Compass
      url: 'https://mariabrio.vercel.app'

- title: mergeOS
  slug: mergeOS
  description: |
    These days, becoming better turned out to be a blurry concept - now, it's all about being inhumanly, incoherently, and impossibly efficient. The idea of performance management or the questions surrounding "why keeping score is so important" mean nothing, as our industry, similarly to the video games one, is obviously hit-driven: all that matters is an application, tool, or game blowing up, but no one tells you all the things you'll lose while walking through that valley.

    In this context, these thoughts made me work on a tool I could privately use to improve my productivity - because nothing is enough. That's how [mergeOS](https://github.com/JuditKaramazov/mergeOS/releases/download/v1.0.0/mergeOS.zip), **a MacBook shortcut allowing users to easily preview, manage, and access their development responsibilities**, was born.

    Needless to say, **accessibility** has always been one of my main goals, no matter if I was developing something for others or my own pleasure and entertainment. Considering this, I tried to simplify all the functionalities and authentication steps as much as possible for mergeOS, which resulted in the following requirements:

    1. Download, unzip, and install the [latest release](https://github.com/JuditKaramazov/mergeOS/releases/download/v1.0.0/mergeOS.zip).
    2. With the app open, go to **Authentication**.
    3. Enter your **GitHub username**.
    4. [Generate a GitHub access token](https://github.com/settings/tokens/new?scopes=repo) with **repo scope**.
    5. Enter your token.

    After that, and once you've accessed the **Settings...** option, you'll find the following sections:
    
    1. **Authentication**, allowing users to connect directly to their GitHub account.
    2. **General**, where users can choose the **build information and labels displayed**, the **pull requests** they'd want to visualize, the **application's refreshing rate**, or the **"launch at login"** option.
    3. **Shortcuts**, enabling users to **record their preferred shortcuts** for the **application's main functionalities**.
    4. **Appearance**, where displaying a **counter near the icon** indicating the **assigned, created, and review-requested** pull requests becomes a reality. It is also possible to **customize the menu bar icon**: a PR image, GitHub's logo, an Octocat... you choose!
    
    Since I created this application **thinking of a tool I myself would want to use**, I tried to respect GitHub's icons, colors, and aesthetic decisions as much as possible, just so that I could feel **mergeOS** as an extension and not something merely external.
  techstack:
    - Swift
    - Xcode
    - Storyboard
    - GitHub API
  
  links:
    - title: '@mergeOS'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/mergeOS'

    - title: mergeOS, v1.0.0
      icon: Compass
      url: 'https://github.com/JuditKaramazov/mergeOS/releases/download/v1.0.0/mergeOS.zip'

- title: Take you there
  slug: TakeYouThere
  description: |
    Maps have always been an interesting concept to me. Besides the ones we mentally create in our heads (this is, the basic orientation guidelines just so that we won't end up lost in our own city), the idea of a physical item revealing the very soul of the spaces we inhabit (or simply plan to visit) holds a mysterious, evocative power that not many other objects can elicit.

    Undoubtedly, maps gained new connotations in recent times: without the "dragons" restriction, our societies deeply embraced the possibility of keeping such practical tools in our pockets, even if just in a virtual way. 

    This idea inspired [Take you there](https://takeyouthere.vercel.app): an interactive map empowering users to set different, customized markers in order to immortalize the places they visited together. Was it just a trip? Perfect. A special event? A café you enjoyed? **Pin it** and **show a picture** symbolizing the importance behind that moment, then.
    
    Here are some of its main features:

    1. **An interactive map** with several available themes.
    2. **A menu button** triggering our Sidebar component.
    3. **A sidebar** containing two main sections:
    - **Locations**: This section displays **all the pins**, detailing the **city, country, distance/date, and author**. It's possible to **sort them by date or distance**.
    - **Contributions**: This section showcases **the amount of pins added by each contributor**. It's possible to **sort** these contributions **by calculating the added markers and the total distance after summing all the additions per person**.

    "Where" is quite a blurry concept, and if [Madonna](https://www.youtube.com/watch?v=79fzeNUqQbQ) didn't specify where that place was, I surely won't make it clear either!
  techstack:
    - Next.js
    - React
    - TypeScript
  
  links:
    - title: '@TakeYouThere'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/TakeYouThere'

    - title: Take you there
      icon: Compass
      url: 'https://takeyouthere.vercel.app'

- title: pythoMazov
  slug: pythoMazov
  description: |
    Prior to [pythoMazov](https://pythomazov.tech)'s release, I wrote a pseudo-book called ["Rising Up: Insights from a Junior to Future Seniors"](https://github.com/JuditKaramazov/InsightsFromJuniorToFutureSeniors). Inevitably, the idea of a "cave" always crossed my mind whenever I thought of my creation, as it appeared to be a complex approach for certain profiles: this is, a main README.md file leading to many others, all of them carefully linked and connected like a delicate, mechanical clock movement.

    That's why this full-stack application exists: to facilitate and grant access to the free educational resources that I gathered and crafted.
    
    Similarly to many portfolios and "link-in-bio" tools these days ([Linktree](https://linktr.ee/) was my biggest reference and inspiration), I decided to organize all my programming materials following the structure of a landing page with associated links - mostly unrelated to any social media, in this specific scenario. Although there is the opportunity for you to contact or support me, I genuinely loved the concept of having a tool helping me share "everything I am" in a simple way, making my content more discoverable, easier to manage, and more likely to convert.

    In order to achieve that result, I structured the links as follows:

    1. **Index**. The landing page, containing links divided into **"Starter Kit"** (the main learning materials offered on the website), **"Useful resources"** (a list of books, websites, and other utilities, like my personal setup), **"Stay tuned"** (reserved for my personal blog, where I write about technology, video games, and development), and a **"Contact & Support"** section.
    2. **Courses**. It can be accessed through the index (**"Starter Kit"**), and it offers both my own courses and certificated ones.
    3. **Cheatsheets**. A hub for my **Python and Git** cheat sheets. More content will be available soon.
    4. **Challenges**. Accessed through the index (**"Learn by coding"**), these links do not redirect to my own material; instead, I gathered some of the most practical websites making learning challenging, engaging, and motivating.

    Sharing legally and freely for better learning is my one and only goal, as the lack of universal access to effective educational resources remains a global problem.

    Let's make it count.
  techstack:
    - Chakra UI
    - Docker
    - Python
    - Railway.app
    - Reflex
    - Supabase
  
  links:
    - title: '@pythoMazov'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/pythoMazov'

    - title: pythoMazov
      icon: Compass
      url: 'https://pythomazov.tech'

- title: Rising Up, a MarkDown book
  slug: InsightsFromJuniorToFutureSeniors
  description: |
    “Once a teacher, always a teacher”. As someone who struggled to find proper material, documentation, books, or even valuable websites during her university years, I feel responsible for **sharing with anyone interested in learning as many tools and platforms as possible**. These days, learning has become not only a need but a reasonable reality; if you have access to an internet connection, you are good to go. It's not always so simple to find the materials appropriately accommodated to our personal way of learning, though. Diversity is key. While you will find more complete tutorials, videos, and courses out there, I thought it could be interesting to gather some of them in the same place.

    The entire content of this repository is closely related to a hub in the form of a website, [pythoMazov](https://www.pythomazov.tech/). However, users can read the content of the book separately, as the main README.md file will redirect to each individual chapter. When it comes to the content itself, we can classify it as follows:

    1. **Books**. A free collection of books regarding different scientific and technological areas: Programming languages, Data Science, Machine Learning, Software Architecture...
    2. **Websites**. An organized array of online sites allowing learners to easily access the latest industry trends, search for cutting-edge tools, find high-quality (and free) assets, etc.
    3. **Courses**. Customized courses explaining the basics of Python, Git, GitHub, and more.
    4. **Certificates**. A curated list of free, online, and certified courses, including different programming languages, Back-End, Front-End, Machine & Deep Learning, Data Analysis...
    5. **Cheatsheets**. A concise set of notes user for quick reference, starting with a beginner-friendly set of Python sheets, and followed by essential Git commands.
    6. **Your IDE & you**. Getting started with the concept of an "integrated development environment": guidelines, descriptions, and recommendations depending on the user's needs.
    7. **Game development recommendations**. Dedicated to game development from the perspective of an indie developer, here you'll find some guidance, tips, and personal recommendations about audio and art tools, game engines, financing platforms, social media...

    Let's keep education free, accessible, flexible, and relevant. Let's make it count.
  techstack:
    - MarkDown
    - Time & Coffee
  
  links:
    - title: '@Rising Up: Insights'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/InsightsFromJuniorToFutureSeniors'

- title: karamaBlog
  slug: karamaBlog
  description: |
    I based this blog (my very personal one - finally!) on the following sections:

    1. **Articles**. It happens to host... articles.
    2. **Links**. Not-so-long exerpts that I happened to consider brain food, with only few personal thoughts on the matter.
    3. **Photos**. These specific photos and image assets are plain ol' copyright - unless I indicate a different author.
    4. **Utils**. Downloadable goodies all around.
    5. **/tecnoMazov**. It displays a list detailing my setup (office & nomad), gear, software and configs as a developer.

    As for its key features, here are some of them:

    1. **Changelog rendering**.
    2. **Day'n'Nite theme switcher**.
    3. **EXIF metadata extraction**.
    4. **JSON feed**.
    5. **Global search**.
    6. **Tags & Related Posts**.

    This little creation that aims to provide me with the necessary tools to conciliate my many realities, also known as karamaBlog, is built as a **statically exported site using Astro and TypeScript**. Although the majority of components are either Astro components or native Web Components, there are some React ones loaded client-side, too. This combination offers the best of both worlds: the speed and efficiency of Astro for static site generation, the type safety and developer-friendly features of TypeScript, and the dynamic interactivity and reusable components provided by React. This synergy results in a performant, maintainable, and feature-rich web application, ensuring an optimal user experience that I know I will never achieve, but here we are, guys: still trying.

    When it comes to the styles, they are based on a combination of basic global styles, component-specific ones, the incorporation of CSS modules, and other peculiarities I would have never achieved without Auregan Nedelec and her genuinely touching logos, illustrations and ideas.

    Since [karamaBlog](https://karamablog.xyz) serves as an extension of the brand used in my recent works (as it happens with this exact same portfolio), I wanted to maintain similar aesthetics, patterns, and a general vibe, ensuring a cohesive and familiar user experience. At the same time, I also wanted to reproduce a sense of evolution beyond technical details and features. However, since this site aims at providing personal access to what’s supposed to be a solitary path, it felt more accurate (and even honest) to represent it as a single individual wandering an immense landscape empty of everything, encountering impossible obstacles, and yet overcoming them not because of their ability but due to a deeper, almost dark power.
  techstack:
    - Astro
    - CSS
    - React
    - TypeScript
    - Shell
    - YAML
  
  links:
    - title: '@karamaBlog'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/karamaBlog'

    - title: karamaBlog
      icon: Compass
      url: 'https://karamablog.xyz'

- title: karamaDots
  slug: ethC-dotfiles
  description: |
    Huh... Why dotfiles?

    That's actually a great question. Long story short, managing dotfiles provides several benefits:
    
    1. **Customization**: Dotfiles allow you to tailor your development environment to suit your preferences. This includes configuring shell settings, defining aliases, and setting up your preferred text editor.
    2. **Portability**: Storing your configuration in dotfiles makes it easier to replicate your development environment across different machines. By version-controlling them, you can quickly set up your environment on a new system.
    3. **Consistency**: Dotfiles help maintain a consistent development environment across different machines. This is particularly useful when working on multiple systems or collaborating with others.
    4. **Productivity**: Having a well-organized set of dotfiles can enhance your productivity by automating repetitive tasks and providing shortcuts for common operations.

    In the realm of dotfiles, custom scripts play a crucial role in automating tasks, enhancing functionality, and streamlining the configuration process. For further information about what you'll find here:

    - **colors.sh**
      - Prints all available colors with their values in the Terminal.

    - **tor.sh**
      - Starts Tor and switches the system-wide proxy settings in macOS.

    - **updaterepos.sh**
      - Recursively updates all git repositories within the given folder.

    - **update-everything.sh**
      - Updates macOS, Homebrew, Node.js, npm, Ruby, ClamAV, and refreshes GPG keys all in one command.
  techstack:
    - Shell
    - CSS
  
  links:
    - title: '@ethC-dotfiles'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/ethC-dotfiles'

    - title: Dotfiles Are Meant to Be Forked
      icon: Compass
      url: 'https://zachholman.com/2010/08/dotfiles-are-meant-to-be-forked'

- title: Memory tastes like iron
  slug: TCA-rogueMazov
  description: |
    "Maturity", what a concept. Now that I can consider myself a mature and serene adult (or so I hope), I find it funny to recall the days when I found myself staring to this old TV screen that my brother was using to play The Legend of Zelda: Ocarina of Time. Independently of the immense progress this industry has witnessed in the last decades, the truth is that even today I find it soothing to go back to those games many people can't even stand anymore. Generational graphic limits, an overwhelming simplicity, not that much of character development, no online features... that's right. However, if we can afford to accept today's limitations, it would be interesting to understand yesterday's ones - and embrace what it meant to demolish some of those obstacles as well. Because we did overcame quite a lot of them, am I right?
    
    We all did. Not so long ago, and while I was still going through one of my formations, I was terrified when confronting the idea of having to go through a JavaScript technical test. These days, it doesn't look as much of a hassle, but the fear paralyzed so fiercely while picturing the many words my mentor could use to express that I didn't pass (spoiler: I did), that nothing seemed enough for me to stop practicing and panicking. Now, it's clear that I'd simply check the documentation, practice, practice, practice... and that's all. But that's today's perspective; unlike today, yesterday I was indeed scared, smol, fragile, and unable to see all the tools I had at my disposal. I was someone who studied humanities during her entire life, after all. "Not good enough for this sector".
    
    In the end, however, and as funny and twisted as it might sound, it was all about words - just like [Memory tastes like iron](https://memorytasteslikeiron.vercel.app) is, too.
  techstack:
    - HTML
    - CSS
    - JavaScript
  
  links:
    - title: '@TCA-rogueMazov'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/TCA-rogueMazov'

    - title: Memory Tastes Like Iron
      icon: Compass
      url: 'https://memorytasteslikeiron.vercel.app'

- title: clamp(culate);
  slug: TCA-clampculate
  description: |
    Not so long ago, I found myself discussing technology with some friends of mine, as if these two realities that should stay away from each other wanted to make the division line thiner than ever. After agreeing with the idea of CSS being a foundational language for web development, I decided to revise some concepts that, eventually, led to an [interesting article](https://ishadeed.com/article/css-min-max-clamp/) vertebrated around CSS Comparison Functions and some insightful ideas about present and future design.
    
    In such a flourishing industry, how will things change regarding our way of designing in the near future? It is indeed exciting to work on web projects that require a great amount of flexibility in their components, but how can we facilitate the process to make it as fluid and coherent as the illustration's second example? Can we all participate in this already-mentioned process? 
    
    I am not so sure about the answer (not when it comes to myself, at least) - and still I opted to create a little **tool making the clamp() formula more accessible** for people who might find it useful. Why? Because our industry is hostile enough already, and sadly (or not?), we all want to believe in the warm residue of a community, don't we?
  techstack:
    - Astro
    - Svelte
    - CSS
    - JavaScript
  
  links:
    - title: '@TCA-clampculate'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/TCA-clampculate'

    - title: clamp(culate);
      icon: Compass
      url: 'https://clampculate.vercel.app'

- title: EVASCode
  slug: TCA-EVASCode
  description: |
    "Why do you pilot an EVA?" "Why would you create **VSCode themes based on EVAs**, even?"

    Quite a long while ago, right when the illusion of self was shattered, I ceased to be - yet I embraced two great animes without taking into account my own timing nor the implications of my acts during such a delicate state: Evangelion came first, and then Berserk arrived to insist on the fact that, independently of how things might seem at the moment and just like Senua would say, "the hardest battles are fought in the mind, not with the sword". Similarly, after several missed occasions when I managed to convince myself about Evangelion showcasing gigantic robots and that's all about it, my best friend reminded me of the existence of his favorite anime. For once, I followed his advice without finding myself any excuse. Which one would I create when I had no mental energy left, anyway? Robots not being to my liking? Despair, the lack of purpose, the absence of any answer when asked "Why do you pilot an EVA?"

    Surprisingly (or not so), he was terribly right: there were indeed mechas, but the entirety of Evangelion had nothing to do with robots slapping their faces without any context, purpose, or reasoning behind their actions and existence. Furthermore, one of the reasons why Evangelion is so profound is that it functions on no fewer than four distinct allegorical levels: it can be enjoyed at face value as an expertly realized sci-fi action adventure, but it is also a dystopian satire of the genre. And a coming-of-age parable. And a treatise on confronting loneliness and uncertainty in the adult world. And - alright, alright. We all know how vast Evangelion's symbolism is, and it would be quite pretentious if I treated my README.md file as some sort of academic paper discussing the presence (or absence) of Lacan, Freud, Hegel, and so many other thinkers in Evangelion's main themes and imagery. Imagine that a bond could be created after such a proof of intimacy. Imagine the dimensions of the following discontents.

    Let's remain here, keeping a safe distance. Is it the world we wished for? "You can't bridge the gap between your own truth and the reality of others", isn't it? "A place with no AT Fields, where individual forms do not exist. An ambiguous world where you cannot tell where you end and others begin. A world where you exist everywhere, and yet you're nowhere, all at once." 
    
    Now, why do you pilot an EVA?
  techstack:
    - VSCode
    - JSON files
    - Cafelito
  
  links:
    - title: '@TCA-EVASCode'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/TCA-EVASCode'

    - title: EVASCode in the Marketplace
      icon: Compass
      url: 'https://marketplace.visualstudio.com/items?itemName=tecnomazov.evas-code'

- title: PraiseTheShift
  slug: Codetopia-PraiseTheShift
  description: |
    None of you would possibly imagine the many times that I actively tried to enjoy Dark Souls before actually achieving such goal. That's correct: it's not only that I mention games all the time, but I analyze, listen, and learn about them more than I'd want to admit. They're always on my mind, as they shapped an irreplacable aspect of my reality and way of decoding it; they play a huge role while confronting my daily mundanities, as they're my favourite soundtrack and best mental companions. They taught me a bunch of things about success, solitude, history, companionship, music, nodding a lot while being a terrible cop, loss, courage, or how to cope with (and, eventually, defeat) depression. "This story again, eh?" Now, let's be realistic: how can a game famous for its depressing setting and brutal difficulty help people with mental illness? That's indeed a great question.

    Independently of the answer(s) (in this case, they are as many as they are varied), what's necessary to highlight here is that the real struggle of the gameplay itself acknowledges the struggles many people are experiencing in life while also encouraging perseverance. I would not dare saying Dark Souls is a celebration of life since the setting and themes make it feel it is not; Lordran, as well as its many variations and twists throughout the franchise, is a place of callous indifference as far as its inhabitants are concerned. However, what keeps people engaged with it and the overall Soulsborne atmosphere is that the threat of meaninglessness comes hand-in-hand with the opportunity for transcendence.
    
    There's no doubt: without the stigma of failure, both players and individuals-still-liberated-from-Dark-Souls'-influence are free to adapt and test new methods rather than remain trapped in the same mindset - which is clearly not my case now that I'm bringing you [PraiseTheShift](https://github.com/JuditKaramazov/Codetopia-PraiseTheShift), a **humble tool allowing you to switch between dark and light mode** under Solaire's blessing and grossly incandescent approval.
  techstack:
    - Swift
    - Xcode
    - Storyboard
    - Objective-C
  
  links:
    - title: '@Codetopia-PraiseTheShift'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/Codetopia-PraiseTheShift'

    - title: The Symbolic Roots of Dark Souls
      icon: Compass
      url: 'https://medium.com/@RoseOfNobility/smash-the-worlds-shell-the-symbolic-roots-of-the-dark-souls-trilogy-bf100b253273'

- title: noctOS
  slug: Codetopia-noctOS
  description: |
    Although we all have to admit that, at a meta level, every single business - Apple included - demonstrated an absurd degree of coherence between their multiple departments (perfectly aligned, like a living organism), it's still lame to exist within some boundaries when, paradoxically, choice and control have been the preferred labels of most of these companies finding customization not so representative of concepts such as "value" and "integrity". What do we truly value as individuals, in the end? Quite a difficult question, this one. In my case, and after reflecting on the ideas that I explored in my last (and colorful) project of the kind, I would say that customization and (at least the fiction of) freedom of choice are indeed essential, and I do appreciate having a minimum control over how things work - and when.
    
    Thanks to this never-ending rapture pushing me to allow other individuals (including myself, this time) to make their devices into digital sanctuaries, I decided to create a **Swift application** empowering users to **personalize their macOS experience by easily setting a light or dark mode theme for their chosen applications**.

    The ability to switch themes and colors can still become a reflection of the dynamic nature of the self, can't it?
  techstack:
    - Swift
    - Xcode
    - Storyboard
    - Ruby

  links:
    - title: '@Codetopia-noctOS'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/Codetopia-noctOS'

    - title: Laws of UX
      icon: Compass
      url: 'https://lawsofux.com'

- title: ChromatOS
  slug: Codetopia-ChromatOS
  description: |
    I recently discussed with my roommate how much Apple restricts customization of system elements like folder colors for consistency, coherency and security. After having a look at the devices that we have at home, it's undeniable that customizing icons and folders in macOS may be more accessible compared to iPadOS as macOS allows more flexibility for system customization and integration with custom extensions or code. iPadOS, on the other hand, is more locked down and restricts extensive customization, especially when it comes to system-level changes.

    The conclusion, of course, was a mutual "that's lame" moment, but even though these restrictions are a (sad) reality we can't possibly overcome, talking about how great it would be to **allow users for this extra customization** is an idea that I couldn't get out of my mind. Why couldn't I? Because as it happens to the best of us, my brain strictly follows the patterns and logic processes that allow me to keep some order up there, just like it usually happens when organizing our notes with **colors**. Colors? Yes, colors, and here's a little explanation of their importance and benefits:
    
    1. Colors serve as visual cues that help users quickly identify and categorize items. When applied to folders, they make it easier to distinguish between different types of content or projects at a glance.
    2. Colors can trigger memory associations. When users assign specific colors to folders, they can establish a color-coding system that aids in remembering the contents or significance of each folder. For example, red folders might represent urgent or high-priority tasks, while blue folders could signify personal (or just Apple-related) projects.
    3. A well-organized visual system reduces cognitive load. Users don't need to remember folder names or dig through numerous directories. Instead, they can rely on the visual cues provided by colors.
    4. Beyond the practical benefits, color customization adds an aesthetic dimension to literally everything - and the macOS experience is no exception.
    5. MacBooks are cool - but they could be cool **and** colorful.

    Considering this, and due to this sudden urge of allowing other individuals to **make their desktop and Finder environment more visually pleasing**, I decided to create a **Swift Apple Finder extension** empowering users to **personalize their macOS experience by easily changing folder colors**.
  techstack:
    - Swift
    - Xcode
    - Storyboard

  links:
    - title: '@Codetopia-ChromatOS'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/Codetopia-ChromatOS'

    - title: The Swift Programming Language Book
      icon: Compass
      url: 'https://docs.swift.org/swift-book/documentation/the-swift-programming-language'

- title: Plant Your Life
  slug: SummerCodeFest-PlantYourLife
  description: |
    Since one of the main subjects affecting my life while coding gravitated around the idea of moving out, I decided to create an application focused on the one and only reality we should all embrace and rely on as functional adults: **plants**.

    1. Just like roommates, they are the perfect allies whenever our scenarios change so drastically - and just like them, they require time, nutrients and the proper environment.
    2. They can be as small and portable as our dearly beloved mobile devices.
    3. Above all, they force us to stick to a well-organized lifestyle, and nothing workings better for it than reminders and notifications.

    Considering this, and since I wanted to keep learning and practicing TypeScript independently of my external circumstances, creating a customized React Native application inspired by my new condition, my roommate's passion for plants, and our overall lack of time management felt like the only possible solution. 
  techstack:
    - HTML
    - CSS
    - TypeScript
    - React Native
    - Expo CLI

  links:
    - title: '@SummerCodeFest-PlantYourLife'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/SummerCodeFest-PlantYourLife'
    
    - title: React Native Docs
      icon: Compass
      url: 'https://reactnative.dev/docs/getting-started'

- title: M.Pomodoro Rajoy
  slug: SummerCodeFest-M.Pomodoro-Rajoy
  description: |
    In this case, and after giving Next.js a try by creating a small [Spotify Replica](https://github.com/JuditKaramazov/SummerCodeFest-Spotify), I focused on some of the subjects mattering the most both to me and most of the Spanish citizens: 

    1. The difficulty to stay focused during the summer.
    2. The unsettling feeling our 2023 elections were eliciting from us.
    3. The relevant figure of Mariano Rajoy, which wasn't so great whenever politics were involved, but that became essential from a comical standpoint.
    4. The importance of learning and practicing TypeScript (maybe this isn't affecting the entire country, but it still is a crucial matter).

    Considering this, I created a customized [M. Pomodoro Rajoy Timer](https://m-pomodoro-rajoy.vercel.app/) greatly inspired by some of our ex-president's most memorable quotes. 
    
    Why? Because we all need to find the strength and courage to focus on our goals, wants, and wishes, and I believe that some of his emblematic sentences could fuel our spirit during difficult times. However, I do consider it essential to highlight that the intention of this small app is not based on attacking various ideologies and positions. Far the contrary, I would want this space to bring a smile to the ones struggling with their studies, work, and overall time management.
  techstack:
    - HTML
    - CSS
    - TypeScript
    - React
    - Vite

  links:
    - title: '@SummerCodeFest-M.Pomodoro-Rajoy'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/SummerCodeFest-M.Pomodoro-Rajoy'
    
    - title: M.Pomodoro Rajoy
      icon: Compass
      url: 'https://m-pomodoro-rajoy.vercel.app'

- title: Spotify Replica
  slug: SummerCodeFest-Spotify
  description: |
    The project provided a Spotify interface and allowed users to explore and interact with various Spotify features:

    1. **Login page** and **authentication** using Spotify credentials.
    2. **User's libraries**, including playlists, liked songs, and more.
    3. **Featured playlists and artists** recommended by Spotify.
    4. **Search bar** to search for songs, artists, albums, and playlists.

    Please note that while most of Spotify's features are available, some functionalities are still under development and will be added in the future! However, I still found it a nice practice to get to understand better some tools I wasn't familiarized with.
  techstack:
    - React
    - Next.js
    - HTML
    - Tailwind CSS
    - JavaScript

  links:
    - title: '@SummerCodeFest-Spotify'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/SummerCodeFest-Spotify'

    - title: Annotations, Google UX design
      icon: Compass
      url: 'https://bootcamp.uxdesign.cc/annotations-google-ux-design-professional-certificate-course-1-7-ede0fc59c32'

- title: expaTICs
  slug: expaTICs
  description: |
    The critical challenge of migration and displacement is as undeniable as the need to coordinate solutions at local, regional, and global levels. Unfortunately, that's far beyond my capabilities; however, I thought that a little application as my final project would be a nice tribute to give to everyone that deconstructed and had to build again their realities - not to mention all the people that I met during my personal journey.
    
    If you are still wondering why expaTICs exists, allow me to highlight another reason: I probably would have never started programming if it wasn't thanks to the scholarship that I got during my stay in Austria. That's the very essence of expaTICs:
    
    1. a representation of the expatriates' journey
    2. the possibilities that go along with it (allowing me to start a TIC formation, in my case)
    
    merged together.

    The combination of these two ideas resulted in the following utilities and features:
    
    1. The usage of **OpenAI API**.
    2. **User management**, implemented thanks to **Firebase authentication system** combined with **localStorage**.
    3. **Private routes** granting users free access to the site's landing page, as well as the login, sign up and restore password sections of it, but preventing them from accessing the Dashboard (our application's very core) without previous registration.
    4. The possibility of **editing their own data individually** (e.g. a color tracker tool that's only accessible to its owner) or openly (e.g. a pseudo-wiki allowing users to collectively craft and deploy notes regarding best places, events, activities, etc.).
    5. The integration of **different sections** focused on the users and their psychological well-being.
  techstack:
    - HTML
    - React
    - JavaScript
    - OpenAI API
    - Next.js
    - Styled-components
    - Firebase

  links:
    - title: '@expaTICs'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/expaTICs'

    - title: Learn Next.js for Scalable Web Apps
      icon: Compass
      url: 'https://www.freecodecamp.org/news/learn-next-js-tutorial'

- title: Star Wars Application
  slug: Sprint8
  description: |
    Star Wars was never a solid reference according to my relationship to the collective imaginary, though; however, its influence is as undeniable as it has been well-established and consolidated through the years, and that's probably why IT Academy asked us to work on a project related to this specific universe.

    The final result should fetch each starship's data (including films and pilots) from the SWAPI Star Wars API (https://swapi.dev/) while combining it with the visual assets provided by https://starwars-visualguide.com/. After accessing an entire list located in the Starships section, the user can check all the information fetched with Axios, which is the HTTP client-based package I decided to use in order to communicate and send requests to the REST endpoints.
    
    Although the simplicity of the application is what seems to be an undeniable reality, there was, of course, a little extra: it was necessary to incorporate a registration system and protected routes just so only registered users could access the exclusive content. In order to achieve it, I had to work on the following utilities:
    
    1. The already mentioned **Star Wars APIs**.
    2. **User management**, implemented thanks to **localStorage** usage.
    3. A **Sign Up**, **Login** and **Sign Out system** keeping track of new users, unregistered, and already registered ones, which allows the user to sign up, log in, finish their session and still keep their information stored. As you can see in the previous image, the site greets the registered users by displaying their names on the screen.
    4. **Private routes** granting users free access to Home (a so-called "welcome page" with a slider integrated) and the About section, but showing an alert and preventing them from accessing the Starships one without previous registration.
    5. An **infinite scroll** system followed by different "Loading..." or "All starships successfully loaded!" messages, making it more accessible for the user to navigate the list.
  techstack:
    - HTML
    - JavaScript
    - React
    - Styled-components
    - SWAPI Star Wars

  links:
    - title: '@Sprint8'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/Sprint8'

    - title: Judit is No Jedi
      icon: Compass
      url: 'https://juditisnojedi.vercel.app/'

- title: Budget Application
  slug: Sprint7
  description: |
    Is there something we all want, need, and dream of - but none of us have? Exactly: money. With this sad and yet relatable idea in mind, the following project aimed to offer a humble application allowing hypothetical users to estimate the price of a website, as well as obtain a desirable response according to the options they chose and their different prices.

    Independently of the apparent simplicity of the project, it allows for interacting more directly with the client as we are taking into account their choices and preferences, and also providing them with tools for a smoother experience, such as:

    1. A **search bar**.
    2. Buttons **sorting** their saved lists by date and name.
    3. An **individualized deleting system** for each list created.
    4. The possibility of **clearing all their saved budgets at once**.
    5. A **pagination system** focused on making their saved data more accessible.
    6. The possibility of **keeping their budget options saved** in the URL.
    
    By combining all of these elements, we delivered if not a great tool (note that this was the creator's second React project, so of course it was not good at all!), at least an intuitive one.
  techstack:
    - HTML
    - JavaScript
    - React
    - Styled-components
  
  links:
    - title: '@Sprint7'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/Sprint7'
    
    - title: Modern Web Development Site
      icon: Compass
      url: 'https://fullstackopen.com/en/'

- title: First React App
  slug: Sprint6
  description: |
    The following project consisted of an application capable of showing different quotes and accordingly switching the background images just so the hypothetical client of a fictional company can see an initial approximation of the prototype we were supposed to work on. 
    
    Considering that one of the objectives was consistently displaying the different quotes and images, we used [Vite](https://vitejs.dev/guide/) as the base of our project, a build tool that aims to provide a faster and leaner development experience for modern web projects. Thanks to it, it was possible to implement a Welcome screen, as well as a first component consisting of an array with two different properties:
    
    1. img, which stored the background images that should be displayed on the screen.
    2. txt, which contained four different quotes.

    In order to customize the assignment, however, I decided to include new designs and quotes extracted from the [Tao Te Ching](https://terebess.hu/english/tao/gia.html) while still respecting the basis of the project; the objective, in this case, varied from telling a story to providing the user with some meaningful and philosophical quotes.

    It would have been impossible for me to achieve this result if it wasn't thanks to incredibly talented illustrators such as [Helvetica Blanc](https://helveticablanc.com/), the creator behind the artwork that illustrates this application. If you still don't know their work, please, have a look at it (it's simply amazing; you have my word!) - and try your best to support (in any way possible) these creators with such a unique vision of reality.
  techstack:
    - HTML
    - SCSS
    - JavaScript
    - React

  links:
    - title: '@Sprint6'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/Sprint6'

    - title: Thinking in React
      icon: Compass
      url: 'https://react.dev/learn/thinking-in-react'

- title: Video Management Tool
  slug: Sprint4
  description: |
    Hypothesis: A company in the audiovisual sector has asked us for a web application that will allow their employees to quickly find movies from a large database they have, since the process is currently done manually.
    
    You will be in charge of setting up the core of the application: all the logic of filtering and sorting of movies. You have 2 weeks to finish, which is how long this sprint lasts. 2015 and 2017, I was co-designing and leading the UI design & development for various web properties of ChartMogul. I played a key role in creating a components-based UI design system and incorporating it across all web touchpoints.

    The problem is that, even though no one truly asked me to do this, I decided to add a minimal Bootstrap landing page just so I could both explore new designs and express my gratitude to:
    
    1. Auregan Nedelec
    2. Freepik project
    
    for their visual contributions and inspiration. Thanks a lot!
  techstack:
    - HTML
    - SCSS
    - Bootstrap
    - JavaScript

  links:
    - title: '@Sprint4'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/Sprint4'

- title: The Zero Shop
  slug: Sprint-3
  description: |
    As a first contact with JavaScript, IT Academy told us that a company in the e-commerce sector asked for a web application allowing them to offer the purchase of their products through the internet. 
    
    After interiorizing some essential notions regarding web design thanks to the first sprints, we will now be in charge of setting up an initial demo version of the application for the client: management of the shopping cart and the application of the promotions on the final price.

    These were the prototypes we had to work with:
    
    1. The **main site**, providing users with functionalities such as adding products to the cart or showing a modal that includes the products they bought, their individual prices and the total one.
    2. A **checkout page** with a proper validation system accepting certain conditions, depending on the field; if these conditions are not met, it doesn't allow the user to submit their form until all tests have been passed.
    
    Even though IT Academy came up with an already-made design, I decided to add some minimal changes while still respecting the requirements and expected features.
  techstack:
    - HTML
    - SCSS
    - Bootstrap
    - JavaScript

  links:
    - title: '@Sprint-3'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/Sprint-3'

    - title: You don't know JavaScript - yet
      icon: Compass
      url: 'https://github.com/getify/You-Dont-Know-JS'

- title: A Simple Bookmark Manager
  slug: Sprint2
  description: |
    What is a UI library? How about Bootstrap and SASS? Why should I consider using this software system (or toolchain) that comes with a collection of components that could make my life way easier? 
    
    Although the first and second questions are completely understandable when we're just starting to dive into this immense area of knowledge, getting in touch with Bootstrap's definition pointing it as one of the most popular CSS frameworks for developing responsive and mobile-first websites should be a reason enough to, at least, give it a try - and that's what we did.
    
    Once we thoroughly studied these new realities, their usage, and advantages, IT Academy proposed a project consisting of replicating A simple bookmark manager.
    
    The entire landing page incorporated:
    
    1. The **main content** with its corresponding **navbar**.
    2. A **features section** explaining the most remarkable characteristics of this (fictional) tool.
    3. A **download section** including Chrome, Firefox, and Opera versions of the extension.
    4. A **FAQS section** that allowed us to incorporate an **accordion component**.
    5. A **footer** with a **Contact us area** that would throw an error whenever the form receives an empty email address or an invalid one.
  
  techstack:
    - HTML
    - SCSS
    - Bootstrap
 
  links:
    - title: '@Sprint2'
      icon: GitHub
      url: 'https://github.com/JuditKaramazov/Sprint2'

    - title: Getting started with Bootstrap
      icon: Compass
      url: 'https://getbootstrap.com/docs/4.3/getting-started/introduction/'

